//Draft Main file
//Full of functions!

//Function: Printer
//What: converts array to string
//Input: array
//Output: string
// function printer(arr) {
//     let fieldString = "";
//     for (let i = 0; i < arr.length; i++) {
//         fieldString += arr[i].join("");
//         fieldString += "\n";
//     }
//     console.log(fieldString);
// }

//Function: Tile Random
//What: Selects between either a hole or field character/string
//Input: N/A
//Output: String
// function tileRandom() {
//     let charArray = [hole, fieldCharacter];
//     return charArray[Math.floor(Math.random() * 2)];
// }

//console.log(tileRandom());
/*
function printTileLine(size) {
    let finalLine = "";
    for (let i = 0; i < size; i++) {
        finalLine += tileRandom();
    }
    return finalLine;
}

function printTileLine2(size) {
    let finalLine = "";
    let helperArray = [];
    for (let i = 0; i < size; i++) {
        helperArray.push(tileRandom());
        finalLine = helperArray.join("");
    }
    return finalLine;
}
//console.log(printTileLine(8));
*/
//Function: Print Tile Array in line
//What: Given a number/size/length, this function will print/push the hole and field characters onto an array. Hole or Field characters are generated by calling the tileRandom function.
//Input: Number
//Output: Array
// function printTileArrayLine(size) {
//     let helperArray = [];
//     for (let i = 0; i < size; i++) {
//         helperArray.push(tileRandom());
//     }
//     return helperArray;
// }

//console.log(printTileArrayLine(10));
//Tested
/*
function printHatLine(size) {
    let finalLine = "";
    let helperArray = [];
    let hatPositionNumber = Math.floor(Math.random() * size) - 1;
    for (let i = 0; i < size; i++) {
        if (i === hatPositionNumber) {
            helperArray.push(hat);
        } else {
            helperArray.push(tileRandom());
            finalLine = helperArray.join("");
        }
    }
    // console.log(finalLine.length);
    return finalLine;
}
*/

//console.log(printHatLine(10));
//Function: Printing the Hat Array Line
//What: Printing the hat character at a random position. Saves a random number based on the length of the array. Pushes the hat character at the number. Else, calls the titleRandom function and pushes onto array.
//Input: Number (for the length of the array line)
//Output: Array that contains characters/strings
// function printHatArrayLine(size) {
//     let helperArray = [];
//     let hatPositionNumber = Math.floor(Math.random() * size);
//     for (let i = 0; i < size; i++) {
//         if (i === hatPositionNumber) {
//             helperArray.push(hat);
//         } else {
//             helperArray.push(tileRandom());
//         }
//     }
//     // console.log(helperArray.length);
//     return helperArray;
// }

//console.log(printHatArrayLine(10));
/*
function printTileGrid(length, width) {
    let finalGrid = "";
    let hatLineNum = Math.floor(Math.random() * length);
    for (let i = 0; i < length; i++) {
        if (i === hatLineNum) {
            finalGrid += printHatLine(width) + "\n";
        }
        finalGrid += printTileLine2(width) + "\n";
    }
    return finalGrid;
}
console.log(printTileGrid(10, 10));
console.log(printTileGrid(5, 5));
console.log(printTileGrid(8, 11));
*/

//Function: Print Tile Array Grid
//What: Printing the 2D array grid. Generates a random number for the 'line' the hat tile array will be printed. Calling the function that prints tile array lines and pushing on the array grid.
//Input: Number (for length of array[i]), Number (width, but this is the length for array[j])
//Output: 2D array

// function printTileArrayGrid(length, width) {
//     let hatLineNum = Math.ceil(Math.random() * length);
//     //console.log(hatLineNum);

//     for (let i = 0; i < length; i++) {
//         if (i === hatLineNum) {
//             myArrayGrid.push(printHatArrayLine(width));
//         } else {
//             myArrayGrid.push(printTileArrayLine(width));
//         }
//     }
//     return myArrayGrid;
// }

//console.log(printTileArrayGrid(4,5));
/*
//console.log(myArrayGrid);
printTileArrayGrid(8,12);
console.log(myArrayGrid);
console.log(myArrayGrid[0][0]);
//console.log(myArrayGrid[7][11]);
//console.log(myArrayGrid[2][5]);
*/
//let letter = prompt("Enter a letter : ");
//console.log(`Here is your ${letter}`);
/*
function xLocation(array, p1, p2) {
    if ((p1 && p2) === undefined) p1 = 0;
    p2 = 0;
    if ((p1 || p2) === undefined) p1 = 0;
    p2 = 0;
    return array[p1][p2];
}
*/

//Function: Win Or Lose
//What: checks the location of movement to see if player character landed on win or loss conditions.
//Input: string/character at array index
//Oput: Message and/or calls a function to continue game
// function winOrLose(xloco) {
//     let gameCond = 0;
//     if (xloco === hat) {
//         //console.log("You found your hat!");
//         return (gameCond = 1);
//     } else if (xloco === hole) {
//         //console.log(`You fell into a hole, ${loseMsg}`);
//         return (gameCond = 2);
//     } else if (xloco === undefined) {
//         console.log(`You fell off the map, ${loseMsg}`);
//         return (gameCond = 3);
//     } else {
//         //continue game function?
//         //console.log("continue game");
//         return (gameCond = 4);
//         //lose condition
//         //off the edge
//         //win condition
//     }
// }
/*
console.log(xLocation(myArrayGrid));
console.log(xLocation(myArrayGrid,0,1));
console.log(xLocation(myArrayGrid,0,2));
console.log(xLocation(myArrayGrid,0,3));
console.log(xLocation(myArrayGrid,1,0));
console.log(xLocation(myArrayGrid,1,1));
console.log(xLocation(myArrayGrid,1,2));
*/

//Short variable name for pathCharacter
//let pathChar = pathCharacter;

//Function Name: My Path
//What: replaces the character/string in 2D array index location, saves the new array to the main myArrayGrid, overrides the starting locations, prints the new array.
//Input: Array, Number (index of 1st Array), Number (index of 2nd Array)
//Output: Spliced original array
// function myPath(array, p1, p2) {
//     array[p1].splice(p2, 1, pathChar);
//     myArrayGrid = array;
//     gp1 = p1;
//     gp2 = p2;
//     printer(array);
// }
//Testing myPath. Test PASSED
/*
console.log(myPath(testPath, 0, 0));
console.log(myPath(testPath, 0, 1));
console.log(myPath(testPath, 1, 1));
*/
//Function: Check Input
//What: takes the current array and index positions, checks if the user fell off the map, if not, updates the location of the user character, calls the myPath function, checks the win or lose conditions and calls to continue the game
//Input: Array, position at index i, position at index j
//Output: Prints string or/and calls playGame function
// function checkInput(arr, p1, p2) {
//     if ((p1 || p2) < 0) {
//         return console.log(`You fell off the map, ${loseMsg}`);
//     }
//     newLocation = arr[p1][p2];
//     myPath(arr, p1, p2);

//     if (winOrLose(newLocation) === 1) {
//         return console.log("You found your hat! Thanks for playing!");
//     } else if (winOrLose(newLocation) === 2) {
//         console.log(`You fell into a hole, ${loseMsg}`);
//     } else if (winOrLose(newLocation) === 4) {
//         console.log("continue game");
//         playGame();
//     }
// }

//Function Name: Input Processor
//What it does: takes user input, and moves the character to different array index position.
//Input: User input key
//Output: Print array with updated characters, Print message of game status
// function inputProcessor(userInput) {
//     let newLocation = []; //Saves the grid char before input location is updated
//     let myArr = myArrayGrid;
//     let len = gp1;
//     let wid = gp2;
//     if (userInput === "h") {
//         //move left
//         wid -= 1;
//         checkInput(myArr, len, wid);
//         //newLocation = myArr[len][wid]; //if -1, will result in an error, have to catch error here.
//         //update the moving board
//         //myPath(myArr, len, wid); //Prints new array with updated character location
//         //winOrLose(newLocation);
//     } else if (userInput === "j") {
//         //functions
//         len += 1;
//         checkInput(myArr, len, wid);
//         /*
//         newLocation = offGrid(myArr, len, wid);
//         myPath(myArr, len, wid);
//         winOrLose(newLocation);
//         */
//     } else if (userInput === "k") {
//         //functions
//         len -= 1;
//         checkInput(myArr, len, wid);
//         /*
//         newLocation = offGrid(myArr, len, wid);
//         myPath(myArr, len, wid);
//         winOrLose(newLocation);
//         */
//     } else if (userInput === "l") {
//         //functions
//         wid += 1;
//         checkInput(myArr, len, wid);
//         //newLocation = myArr[len][wid];
//         //myPath(myArr, len, wid);
//         //winOrLose(newLocation);
//     } else {
//         console.log("Please put in the correct direction inputs: h,j,k or l");
//         playGame();
//     }
//     console.log(newLocation);
// }

// printTileArrayGrid(4, 5);
// let gp1 = 0;
// let gp2 = 0;
// myPath(myArrayGrid, gp1, gp2);
// //printer(myArrayGrid);

// function playGame() {
//     let userInput = prompt("Please choose a direction using the hjkl keys : ");
//     inputProcessor(userInput);
// }
// playGame();
/*
console.log("Your starting location: ");
console.log(myArrayGrid[1][1]);
console.log(myArrayGrid[1]);
console.log("The next h location: ");
console.log(myArrayGrid[1][0]);
console.log("The next j location: ");
console.log(myArrayGrid[2][1]);
console.log("The next k location: ");
console.log(myArrayGrid[0][1]);
console.log("The next L location: ");
console.log(myArrayGrid[1][2]);
*/
